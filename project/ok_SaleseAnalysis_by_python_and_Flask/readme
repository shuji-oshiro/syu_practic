### 主な機能

1. **CSVファイルから売上情報・コース情報をアップロード**
   - 「売上情報の読み込み」ボタンで売上CSVを、「コース情報更新」ボタンでコースCSVをアップロードできます。

2. **3つの集計ビューの切り替え**
   - 「チェーン店別集計」「コース別集計」「商品別集計」のラジオボタンで、表示する集計軸を切り替えられます。

3. **階層的なドリルダウン表示**
   - 例えば「チェーン店別集計」では、取引先→店舗→商品とクリックで詳細に掘り下げていけます。
   - 他の集計軸でも同様に、クリックで下位の情報を表示します。

4. **DataTablesによる表形式表示**
   - jQueryのDataTablesを使い、スクロールやカラム幅調整、クリックイベントなどが実装されています。

5. **データの初期化・リセット**
   - データのアップロードやビュー切り替え時、またブラウザ終了時に初期化処理が走ります。

---

### 技術構成

- **フロントエンド**
  - HTML（`templates/index.html`）
  - jQuery, DataTables（CDN経由）
  - JavaScriptでAPI呼び出し・動的テーブル生成

- **バックエンド（想定）**
  - FlaskなどのPython Webフレームワーク
  - `/api/sales`, `/api/courses`, `/api/stores`, `/api/items` などのREST APIエンドポイント
  - CSVファイルの受け取り・データ保存・集計処理

- **スタイル**
  - 独自CSS（`/static/css/style.css`）

---

### 画面イメージ

- 上部にタイトルとファイルアップロードボタン、集計軸切り替えラジオボタン
- 中央に選択した集計軸ごとのテーブル（取引先別・コース別・商品別）
- テーブルの行をクリックすると、下位の詳細テーブルが表示される

---

### まとめ

**売上データやコース情報をCSVで取り込み、さまざまな切り口で集計・分析できる業務用Webアプリ**です。  
フロントエンドはjQuery＋DataTablesで動的にテーブルを生成し、バックエンドAPIと連携してデータを取得・表示します。


### バックエンドの実行

docker build -t sales_ana . 　##ビルド
docker run -p 5000:5000 sales_ana ##実行


