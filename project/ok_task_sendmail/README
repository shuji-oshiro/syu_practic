このプログラムはタスク管理システム

タスク管理システムでは以下の機能がある
1.タスクの追加：任意のメールアドレスを指定
2.タスクの削除：管理者のみ可能
3.タスクの完了：メールアドレス単位でタスク完了
4.タスクの一覧：メールアドレス単位で一覧表示、指定がない場合はすべて表示する
5.自動メール送信：特定の時間でタスク未完了者にメール送信

メール送信機能（sendmail）を持つWebアプリケーションの構成になっています。  
`docker-compose.yml` の内容から、以下の2つのサービスで構成されていることが分かります。

### 1. backend（バックエンド）
- **役割**: メール送信などのAPI処理を担当するサーバー
- **技術**: `uvicorn` で `main:app`を起動
- **ポート**: 8000番で外部公開
- **ボリューム**: `./app` ディレクトリをコンテナ内 `/app` にマウント
- **タイムゾーン**: Asia/Tokyo
- **ネットワーク**: `sendmail` という独自ネットワークを利用

### 2. frontend（フロントエンド）
- **役割**: ユーザー向けのWeb画面を提供
- **技術**: `nginx` をWebサーバーとして利用
- **ポート**: 80番で外部公開
- **ボリューム**:  
  - `./frontend` ディレクトリをNginxの公開ディレクトリにマウント  
  - `./nginx/default.conf` をNginxの設定ファイルとして利用
- **依存関係**: backendサービスが起動してから立ち上がる

### ネットワーク
- 両サービスは `sendmail` というDockerネットワーク上で相互通信可能

---

**まとめ**  
このプロジェクトは、Python製のAPIサーバーでメール送信などのバックエンド処理を行い、
Nginxで静的なフロントエンド（Web画面）を配信する構成です。
両者はDocker Composeで一括管理され、ローカル開発やデプロイが容易になっています。
